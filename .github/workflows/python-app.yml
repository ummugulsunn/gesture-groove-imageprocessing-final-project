name: Python Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Debug Python environment
      run: |
        python --version
        which python
        python -m pip --version
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk
        sudo apt-get install -y portaudio19-dev
        sudo apt-get install -y libsndfile1
        # Ubuntu 22.04 için OpenGL bağımlılıkları
        sudo apt-get install -y libgl1
        sudo apt-get install -y libgl1-mesa-dri
        sudo apt-get install -y libgl1-mesa-glx
        sudo apt-get install -y libglu1-mesa
        sudo apt-get install -y libegl1
        sudo apt-get install -y libgles2
        sudo apt-get install -y libglx0
        sudo apt-get install -y libglx-mesa0
        sudo apt-get install -y mesa-utils
        sudo apt-get install -y xvfb  # Virtual framebuffer for headless testing
        
    - name: Configure OpenGL
      run: |
        # OpenGL için gerekli environment variables
        echo "export LIBGL_ALWAYS_SOFTWARE=1" >> $GITHUB_ENV
        echo "export MESA_GL_VERSION_OVERRIDE=3.3" >> $GITHUB_ENV
        echo "export MESA_GLSL_VERSION_OVERRIDE=330" >> $GITHUB_ENV
        
    - name: Start virtual framebuffer
      run: |
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        echo "export DISPLAY=:99" >> $GITHUB_ENV
        
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install numpy==1.24.3  # MediaPipe için spesifik numpy versiyonu
        
    - name: Install MediaPipe
      run: |
        pip install mediapipe==0.10.21
        python -c "import mediapipe as mp; print('MediaPipe version:', mp.__version__)"
        
    - name: Install remaining dependencies
      run: |
        pip install -r requirements.txt
        pip list  # Debug: Tüm kurulu paketleri göster
        
    - name: Run basic tests
      run: |
        python -c "import mediapipe; import cv2; import numpy; print('All core imports successful')"
      env:
        PYTHONPATH: ${{ github.workspace }}
        PYTHONUNBUFFERED: 1
        TF_CPP_MIN_LOG_LEVEL: 2
        DISPLAY: :99
        LIBGL_ALWAYS_SOFTWARE: 1
        MESA_GL_VERSION_OVERRIDE: 3.3
        MESA_GLSL_VERSION_OVERRIDE: 330
        
    - name: Run pytest
      run: |
        pytest tests/ -v
      env:
        PYTHONPATH: ${{ github.workspace }}
        PYTHONUNBUFFERED: 1
        TF_CPP_MIN_LOG_LEVEL: 2
        DISPLAY: :99
        LIBGL_ALWAYS_SOFTWARE: 1
        MESA_GL_VERSION_OVERRIDE: 3.3
        MESA_GLSL_VERSION_OVERRIDE: 330
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Check formatting with black
      run: |
        black . --check
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true 